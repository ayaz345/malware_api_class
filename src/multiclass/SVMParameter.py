

class SVMParameter:
    def __init__(self, kernel, c, gamma, class_weights):

        #Embedding
        self.kernel = kernel
        self.c = c
        self.gamma = gamma
        self.class_weights = class_weights



class SVMParameters:
    def __init__(self):
        # model
        self.parameters = [SVMParameter("rbf", 1.0, 100, {})]
        self.parameters.append(SVMParameter("rbf", 1.0, 1000, {}))
        self.parameters.append(SVMParameter("rbf", 100.0, 0.1, {}))
        self.parameters.append(SVMParameter("rbf", 100.0, 10, {}))
        self.parameters.append(SVMParameter("rbf", 100.0, 100, {}))

        self.parameters.append(SVMParameter("sigmoid", 100.0, 0.1, {}))
        self.parameters.append(SVMParameter("sigmoid", 100.0, 10, {}))
        self.parameters.append(SVMParameter("sigmoid", 100.0, 100, {}))
        self.parameters.append(SVMParameter("sigmoid", 10.0, 0.1, {}))
        self.parameters.append(SVMParameter("sigmoid", 10.0, 10, {}))

        self.parameters.append(SVMParameter("rbf", 1.0, 100, {}))

        self.parameters.append(SVMParameter("rbf", 1.0, 1000, {}))
        self.parameters.append(SVMParameter("rbf", 100.0, 0.1, {}))
        self.parameters.append(SVMParameter("rbf", 100.0, 10, {}))
        self.parameters.append(SVMParameter("rbf", 100.0, 100, {}))

        self.parameters.append(SVMParameter("sigmoid", 100.0, 0.1, {}))
        self.parameters.append(SVMParameter("sigmoid", 100.0, 10, {}))
        self.parameters.append(SVMParameter("sigmoid", 100.0, 100, {}))
        self.parameters.append(SVMParameter("sigmoid", 10.0, 0.1, {}))
        self.parameters.append(SVMParameter("sigmoid", 10.0, 10, {}))


        self.index = 0


